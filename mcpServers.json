{
  "mcpServers": {
    "sqlite": {
      "command": "mcp-sqlite-server",
      "args": ["/home/ubuntu/app/ai/rago/.rago/data"],
      "description": "SQLite database operations with vector search support"
    },
    "filesystem": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-filesystem", "/home/ubuntu/app/ai/rago", "/tmp"],
      "description": "File system operations with sandboxed directory access",
      "env": {
        "NODE_OPTIONS": "--max-old-space-size=4096"
      }
    },
    "memory": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-memory"],
      "description": "In-memory key-value store for temporary data storage",
      "env": {
        "MEMORY_MAX_SIZE": "100MB"
      }
    },
    "sequential-thinking": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "description": "Enhanced reasoning through step-by-step problem decomposition",
      "env": {
        "THINKING_MAX_DEPTH": "10"
      }
    },
    "playwright": {
      "command": "npx",
      "args": ["-y", "@executeautomation/playwright-mcp-server"],
      "description": "Browser automation and web scraping with Playwright"
    },
    "fetch": {
      "command": "npx",
      "args": ["-y", "mcp-server-fetch-typescript"],
      "description": "HTTP/HTTPS fetch operations for web content retrieval",
      "env": {
        "FETCH_USER_AGENT": "RAGO-MCP/2.0"
      }
    }
  }
}