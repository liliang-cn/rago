# Rago Configuration Example
# Copy this file to rago.toml and modify according to your setup

# ========================
# Server Configuration
# ========================
[server]
# Server port (default: 7127)
port = 7127
# Server host (default: "0.0.0.0" - allows LAN access)
host = "0.0.0.0"
# Enable web UI (default: false)
enable_ui = false
# CORS origins (default: ["*"])
cors_origins = ["*"]

# ========================
# Provider Configuration (REQUIRED)
# You must configure at least one provider
# ========================
[providers]
# Default provider for LLM operations (REQUIRED)
default_llm = "ollama"
# Default provider for embedding operations (REQUIRED)
default_embedder = "ollama"

# --- Ollama Provider (Local LLM) ---
[providers.ollama]
type = "ollama"
# Ollama server URL (REQUIRED)
base_url = "http://localhost:11434"
# LLM model name (REQUIRED)
llm_model = "qwen3"
# Embedding model name (REQUIRED)
embedding_model = "nomic-embed-text"
# Request timeout (REQUIRED)
timeout = "120s"

# --- OpenAI Provider (Optional) ---
# Uncomment and configure to use OpenAI
# [providers.openai]
# type = "openai"
# # OpenAI API key (REQUIRED if using OpenAI)
# api_key = "sk-your-openai-api-key-here"
# # OpenAI API base URL (optional, defaults to official OpenAI)
# base_url = "https://api.openai.com/v1"
# # LLM model name (REQUIRED)
# llm_model = "gpt-4"
# # Embedding model name (REQUIRED)
# embedding_model = "text-embedding-ada-002"
# # Optional organization ID
# organization = "your-org-id"
# # Optional project ID
# project = "your-project-id"
# # Request timeout (REQUIRED)
# timeout = "120s"

# --- LM Studio Provider (Optional) ---
# Uncomment and configure to use LM Studio
[providers.lmstudio]
type = "lmstudio"
# # LM Studio server URL (REQUIRED)
base_url = "http://localhost:1234"
# # LLM model name (REQUIRED)
llm_model = "qwen/qwen3-8b"
# # Embedding model name (REQUIRED)
embedding_model = "text-embedding-qwen3-embedding-4b"
# # Optional API key
# api_key = ""
# # Request timeout (REQUIRED)
timeout = "120s"

# ========================
# Vector Database Configuration (REQUIRED)
# ========================
[sqvect]
# SQLite database path for vector storage (REQUIRED)
# Default: ~/.rago/rag.db
db_path = "~/.rago/rag.db"
# Maximum database connections (optional, default: 10)
max_conns = 10
# Batch size for operations (optional, default: 100)
batch_size = 100
# Number of top results to retrieve (default: 5)
top_k = 5
# Similarity threshold (0.0 = no threshold, higher = more strict)
threshold = 0.0

# ========================
# Keyword Search Configuration (REQUIRED)
# ========================
[keyword]
# Path for keyword search index (REQUIRED)
# Default: ~/.rago/keyword.bleve
index_path = "~/.rago/keyword.bleve"

# ========================
# Text Chunking Configuration (REQUIRED)
# ========================
[chunker]
# Size of text chunks in characters (default: 500)
chunk_size = 500
# Overlap between chunks in characters (default: 50)
overlap = 50
# Chunking method: "sentence", "paragraph", or "token" (default: "sentence")
method = "sentence"

# ========================
# RRF (Reciprocal Rank Fusion) Configuration (REQUIRED)
# ========================
[rrf]
# RRF constant parameter (default: 10)
k = 10
# Relevance threshold for filtering results (default: 0.05)
relevance_threshold = 0.05

# ========================
# Document Ingestion Configuration (Optional)
# ========================
[ingest]
[ingest.metadata_extraction]
# Enable automatic metadata extraction during ingestion (default: false)
enable = false
# LLM model for metadata extraction (auto-configured from default LLM if empty)
llm_model = ""

# ========================
# Tools Configuration (MCP ONLY)
# Built-in tools have been COMPLETELY REMOVED.
# Use MCP (Model Context Protocol) servers for ALL tool functionality.
# ========================
[tools]
# Enable tools functionality (required for MCP tools)
enabled = true
# Maximum concurrent tool calls (applies to MCP tools)
max_concurrent_calls = 5
# Timeout for individual tool calls
call_timeout = "30s"
# Security level: "strict", "normal", or "permissive"
security_level = "normal"
# Built-in tools are no longer supported - use MCP servers
enabled_tools = []  # Deprecated - MCP tools are auto-discovered
# Tool logging level
log_level = "info"

# --- Rate Limiting (applies to MCP tools) ---
[tools.rate_limit]
# Calls per minute limit (0 = no limit)
calls_per_minute = 100
# Calls per hour limit (0 = no limit)
calls_per_hour = 1000
# Burst size for rate limiting
burst_size = 10

[mcp]
# Enable MCP functionality (RECOMMENDED: set to true for production)
enabled = false
# MCP logging level (default: "info")
log_level = "info"
# Default timeout for MCP requests (default: "30s")
default_timeout = "30s"
# Maximum concurrent MCP requests (default: 10)
max_concurrent_requests = 10
# Health check interval for MCP servers (default: "60s")
health_check_interval = "60s"
# Path to external JSON file containing MCP server configurations
# Searches in current directory first, then ~/.rago/ directory
# Set this to enable JSON-based MCP server configuration
# servers_config_path = "mcpServers.json"

# --- MCP Server Configuration Options ---
# Option 1: Use external JSON file (RECOMMENDED)
#   Set servers_config_path above and create a JSON file with your MCP servers
#   JSON format allows for easier management and sharing of configurations
#
# Option 2: Inline TOML configuration (Legacy)  
#   Use the [[mcp.servers]] sections below for direct configuration
#   This method is being phased out in favor of JSON configuration

# Example JSON configuration (mcpServers.json):
# {
#   "mcpServers": {
#     "sqlite": {
#       "command": "mcp-sqlite-server",
#       "args": ["./data"],
#       "env": {
#         "DEBUG": "mcp:*"
#       }
#     },
#     "filesystem": {
#       "command": "npx",
#       "args": ["@modelcontextprotocol/server-filesystem", "--root", "./workspace"],
#       "working_dir": "./workspace"
#     }
#   }
# }

# ========================
# REQUIRED SETUP CHECKLIST:
# ========================
# 1. Choose and configure at least one provider (Ollama, OpenAI, or LM Studio)
# 2. Ensure the provider service is running and accessible
# 3. File paths will be auto-created in ~/.rago/ directory
# 4. Adjust chunk_size and overlap based on your document types
# 5. Configure MCP servers for enhanced tool functionality (RECOMMENDED)
# 6. Disable built-in tools and use MCP servers for production workloads

# ========================
# TOOL MIGRATION GUIDE:
# ========================
# DEPRECATED Built-in Tool -> RECOMMENDED MCP Server
# file_operations          -> filesystem MCP server
# http_client              -> fetch MCP server  
# web_search               -> brave-search MCP server
# sql_query                -> sqlite MCP server (using mcp-sqlite-server)
# 
# MCP servers provide:
# - Better isolation and security
# - More functionality and flexibility  
# - Standard protocol for tool integration
# - Active development and community support
#
# The custom mcp-sqlite-server offers enhanced SQLite functionality
# compared to the standard @modelcontextprotocol/server-sqlite

# ========================
# MINIMAL WORKING CONFIGURATION:
# ========================
# For a basic setup, you only need:
# - [providers] section with one provider configured
# All other sections have sensible defaults:
# - sqvect.db_path defaults to ~/.rago/rag.db
# - keyword.index_path defaults to ~/.rago/keyword.bleve
# - chunker.chunk_size defaults to 500
# - chunker.overlap defaults to 50
# - chunker.method defaults to "sentence"
# - rrf.k defaults to 10
# - rrf.relevance_threshold defaults to 0.05

# ========================
# ESSENTIAL CONFIGURATION FIELDS:
# ========================
# REQUIRED (must be set):
# - providers.default_llm
# - providers.default_embedder
# - providers.[provider].base_url (for Ollama/LMStudio)
# - providers.[provider].api_key (for OpenAI)
# - providers.[provider].llm_model
# - providers.[provider].embedding_model
# - providers.[provider].timeout

# OPTIONAL (have sensible defaults):
# - server.* (defaults: port=7127, host="0.0.0.0", enable_ui=false)
# - sqvect.* (defaults: db_path="~/.rago/rag.db", top_k=5, threshold=0.0)
# - keyword.* (defaults: index_path="~/.rago/keyword.bleve")
# - chunker.* (defaults: chunk_size=500, overlap=50, method="sentence")
# - rrf.* (defaults: k=10, relevance_threshold=0.05)
# - tools.* (defaults: enabled=true, security_level="normal")
# - mcp.* (defaults: enabled=false)
# - ingest.* (defaults: metadata extraction disabled)